@startuml
title US230_RegisterShowRequest_CD

class RegisterShowRequestUI {
  - controller : RegisterShowRequestController
  + doShow()
}

class RegisterShowRequestController {
  - customerRepository : CustomerRepository
  - showRequestRepository : ShowRequestRepository
  + getActiveCustomers() : Iterable<Customer>
  + registerShowRequest(customerVAT: VAT, place: String, dateTime: LocalDateTime, duration: Duration, droneCount: int, descriptionRef: String) : ShowRequest
}

class ShowRequest <<Entity>> {
  - customerVAT : VAT <<FK>>
  - place : Place_1
  - dateTime : Date_3
  - duration : Duration_2
  - requestedDrones : DronesRequested
  - descriptionDocumentRef : Description_1
  - status : ShowRequestStatus
  - submissionDate : LocalDateTime
  + create(...)
}

enum ShowRequestStatus <<ValueObject>> {
  SUBMITTED
  UNDER_ANALYSIS
  APPROVED
  REJECTED
  IN_PRODUCTION
  COMPLETED
  CANCELLED
}

interface CustomerRepository <<Repository>> {
  + findActive() : Iterable<Customer>
  + findByVAT(vat : VAT) : Optional<Customer>
}

interface ShowRequestRepository <<Repository>> {
  + save(request : ShowRequest) : ShowRequest
}

class Customer <<AggregateRoot>> {
    + vat() : VAT
    + name() : Name
    + isActive() : boolean
}

class Geolocation <<ValueObject>> {
    + longitude : double
    + latitude : double
}

class VAT <<ValueObject>> {}
class Place_1 <<ValueObject>> {}
class Date_3 <<ValueObject>> {}
class Duration_2 <<ValueObject>> {}
class DronesRequested <<ValueObject>> {}
class Description_1 <<ValueObject>> {}
class Name <<ValueObject>> {}
class Address <<ValueObject>> {}

RegisterShowRequestUI ..> RegisterShowRequestController
RegisterShowRequestController ..> CustomerRepository
RegisterShowRequestController ..> ShowRequestRepository
RegisterShowRequestController ..> ShowRequest : creates
ShowRequest --> Customer : references 
ShowRequest *-- Place_1
ShowRequest *-- Date_3
ShowRequest *-- Duration_2
ShowRequest *-- DronesRequested
ShowRequest *-- Description_1
ShowRequest *-- ShowRequestStatus
Customer --> VAT
Customer --> Name
Customer --> Address
CustomerRepository --> Customer : gets
Place_1 --> Geolocation
@enduml